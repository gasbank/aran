/* 
 * ExpMap.mac: Paper implementation
 * 
 * Practical Parameterization of Rotations Using the Exponential Map
 * By Grassia [JGT 98]
 *
 * 2010 Geoyeob Kim
 */

load("MyMathFunc.mac");
load("PrintClike.mac");

/* Print calculation time for each command */
/*showtime: true;*/
optimprefix: _x;
ratprint: false;

thsimplify(ex) := block(
	ex : subst(th, sqrt(v1^2+v2^2+v3^2), ex),
	ex : subst(th^2, v1^2+v2^2+v3^2, ex),
	/*  ex_s : subst(th, abs(th), ex_s),  */
	ex
)$
eliminatetimederivative(ex) := block (
	ex : subst(pdd1, diff(p1(t),t,2), ex),
	ex : subst(pdd2, diff(p2(t),t,2), ex),
	ex : subst(pdd3, diff(p3(t),t,2), ex),
	ex : subst(vdd1, diff(v1(t),t,2), ex),
	ex : subst(vdd2, diff(v2(t),t,2), ex),
	ex : subst(vdd3, diff(v3(t),t,2), ex),
	ex : subst(pd1, diff(p1(t),t), ex),
	ex : subst(pd2, diff(p2(t),t), ex),
	ex : subst(pd3, diff(p3(t),t), ex),
	ex : subst(vd1, diff(v1(t),t), ex),
	ex : subst(vd2, diff(v2(t),t), ex),
	ex : subst(vd3, diff(v3(t),t), ex),
	ex : subst(p1, p1(t), ex),
	ex : subst(p2, p2(t), ex),
	ex : subst(p3, p3(t), ex),
	ex : subst(v1, v1(t), ex),
	ex : subst(v2, v2(t), ex),
	ex : subst(v3, v3(t), ex),
	ex
)$

/* 
 * CRUCIAL for talyor expension, since it automatically
 * substitutes expressions such as 'abs(th)' to 'th'
 */
assume(th >= 0)$

X   : [p1(t)  , p2(t)  , p3(t)  , v1(t)  , v2(t)  , v3(t)  ];
Xd  : diff(X, t);
Xdd : diff(Xd, t);

/* Rotation vector */
v : [v1(t), v2(t), v3(t)]$
/* Length(angle) of rotation vector */
theta : sqrt(v1(t)^2 + v2(t)^2 + v3(t)^2)$
/* Rotation quaternion */
qw : cos(theta/2)$
qx : sin(theta/2) * v1(t) / theta$
qy : sin(theta/2) * v2(t) / theta$
qz : sin(theta/2) * v3(t) / theta$
q : [qw, qx, qy, qz]$
/* Rotation matrix */
R : RotationMatrixFromQuaternion(qw,qx,qy,qz)$


Wi : matrix([ R[1,1], R[1,2], R[1,3], p1(t) ],
            [ R[2,1], R[2,2], R[2,3], p2(t) ],
            [ R[3,1], R[3,2], R[3,3], p3(t) ],
            [      0,      0,      0,  1    ] )$

Wi_s : thsimplify(eliminatetimederivative(Wi));

/*Wi_s : subst((sinc(th/2)/2)^2*v1^2, sin(th/2)^2/th^2*v1^2, Wi_s);*/


/*
Wi : matrix([ R[1,1], R[1,2], R[1,3],  0 ],
            [ R[2,1], R[2,2], R[2,3],  0 ],
            [ R[3,1], R[3,2], R[3,3],  0 ],
            [  p1(t),  p2(t), p3(t) ,  1 ] )$
*/
ddWi : diff(Wi, t, 2)$

Wi   : eliminatetimederivative(Wi)$
ddWi : eliminatetimederivative(ddWi)$
X    : eliminatetimederivative(X)$
Xd   : eliminatetimederivative(Xd)$
Xdd  : eliminatetimederivative(Xdd)$

assume(sx > 0)$
assume(sy > 0)$
assume(sz > 0)$
assume(totMass > 0)$
density: totMass / (sx*sy*sz)$
bx   : matrix([x,y,z,1])$
int0 : transpose(bx).bx * density$
intx : integrate(int0,x,-sx/2,sx/2)$
inty : integrate(intx,y,-sy/2,sy/2)$
Mx   : integrate(inty,z,-sz/2,sz/2)$

at(Mx, [sx=0.5, sy=0.5, sz=2, totMass=10]);


Mi : matrix([Ixx, 0, 0, 0],
            [0, Iyy, 0, 0],
            [0, 0, Izz, 0],
            [0, 0, 0, Iww])$
length(Mi);
length(Mi[1]);

TOT : [0,0,0,0,0,0]$
for j:1 thru 6 do (
    tot : diff(Wi, X[j]) . Mi . transpose(ddWi),
    length(tot),
    length(tot[1]),
    TOT[j] : tot[1,1] + tot[2,2] + tot[3,3] + tot[4,4]
)$


TOT : thsimplify(TOT)$
TOT : ratsimp(TOT)$


printMatDim(TOT); /* TOT is not a matrix. */

M : coefmatrix([TOT[1]=0, TOT[2]=0, TOT[3]=0, TOT[4]=0, TOT[5]=0, TOT[6]=0], Xdd)$

printMatDim(M);

/*
Cqd_G : ev(TOT, [pdd1=0, pdd2=0, pdd3=0, vdd1=0, vdd2=0, vdd3=0])$
G     : ev(Cqd_G, [pd1=0, pd2=0, pd3=0, vd1=0, vd2=0, vd3=0])$
Cqd   : Cqd_G - G$
G;
MXdd  : TOT - Cqd_G$
*/
Cqd_G : TOT - M.Xdd$
/*
M : coefmatrix([MXdd[1]=0, MXdd[2]=0, MXdd[3]=0, MXdd[4]=0, MXdd[5]=0, MXdd[6]=0], Xdd)$
*/

M;

/*
M   : ratsimp(M)$
Cqd_G : ratsimp(Cqd_G)$
*/

ratsimp(M . Xdd + Cqd_G - TOT); /* TAUTOLOGY */

/* X ONLY */
TOTx:at(TOT, [p1=3, p2=7, p3=4, v1=2, v2=0, v3=0,
               pd1=7, pd2=5, pd3=2, vd1=20000000000000, vd2=0, vd3=0,
               Ixx=0.20833333333333331, Iyy=0.20833333333333331, Izz=3.333333333333333, Iww=10, th=2])$

MM:coefmatrix([TOTx[1]=0, TOTx[2]=0, TOTx[3]=0,TOTx[4]=0,TOTx[5]=0,TOTx[6]=0],Xdd)$
CC:ratsimp(TOTx - MM.Xdd)$
float(MM^^-1 . (-CC));


/* X and Y */
TOTx:at(TOT, [p1=1, p2=2, p3=4, v1=-1, v2=2, v3=0,
               pd1=5, pd2=2, pd3=10, vd1=-10, vd2=20, vd3=0,
               Ixx=0.20833333333333331, Iyy=0.20833333333333331, Izz=3.333333333333333, Iww=10, th=sqrt(1^2+2^2)])$

MM:coefmatrix([TOTx[1]=0, TOTx[2]=0, TOTx[3]=0,TOTx[4]=0,TOTx[5]=0,TOTx[6]=0],Xdd)$
CC:ratsimp(TOTx - MM.Xdd)$
float(MM^^-1 . (-CC));


/* X and Z */
TOTx:at(TOT, [p1=1, p2=2, p3=4, v1=1, v2=7, v3=2,
               pd1=5, pd2=2, pd3=10, vd1=1000, vd2=7000, vd3=2000,
               Ixx=1, Iyy=1, Izz=1, Iww=10, th=sqrt(1^2+2^2+7^2)])$

MM:coefmatrix([TOTx[1]=0, TOTx[2]=0, TOTx[3]=0,TOTx[4]=0,TOTx[5]=0,TOTx[6]=0],Xdd)$
CC:ratsimp(TOTx - MM.Xdd)$
float(MM^^-1 . (-CC));


quit();

/* Y ONLY */
TOTx:at(TOT, [p1=3, p2=7, p3=4, v1=0, v2=2, v3=0,
               pd1=7, pd2=5, pd3=2, vd1=0, vd2=34350, vd3=0,
               Ixx=0.20833333333333331, Iyy=0.20833333333333331, Izz=3.333333333333333, Iww=10, th=2])$

MM:coefmatrix([TOTx[1]=0, TOTx[2]=0, TOTx[3]=0,TOTx[4]=0,TOTx[5]=0,TOTx[6]=0],Xdd)$
CC:ratsimp(TOTx - MM.Xdd)$
float(MM^^-1 . (-CC));

/* Z ONLY */
TOTx:at(TOT, [p1=1, p2=2, p3=4, v1=0, v2=0, v3=2,
               pd1=5, pd2=2, pd3=10, vd1=0, vd2=0, vd3=20000,
               Ixx=0.20833333333333331, Iyy=0.20833333333333331, Izz=3.333333333333333, Iww=10, th=2])$

MM:coefmatrix([TOTx[1]=0, TOTx[2]=0, TOTx[3]=0,TOTx[4]=0,TOTx[5]=0,TOTx[6]=0],Xdd)$
CC:ratsimp(TOTx - MM.Xdd)$
float(MM^^-1 . (-CC));


/* Y and Z */
TOTx:at(TOT, [p1=0, p2=0, p3=5, v1=0, v2=1, v3=2,
               pd1=0, pd2=0, pd3=0, vd1=0, vd2=3000000000, vd3=6000000000,
               Ixx=0.20833333333333331, Iyy=0.20833333333333331, Izz=3.333333333333333, Iww=10, th=sqrt(1^2+2^2)])$

MM:coefmatrix([TOTx[1]=0, TOTx[2]=0, TOTx[3]=0,TOTx[4]=0,TOTx[5]=0,TOTx[6]=0],Xdd)$
CC:ratsimp(TOTx - MM.Xdd)$
float(MM^^-1 . (-CC));


/* X and Y and Z */
TOTx:at(TOT, [p1=0, p2=0, p3=5, v1=3, v2=1, v3=2,
               pd1=0, pd2=0, pd3=0, vd1=30000, vd2=10000, vd3=20000,
               Ixx=0.20833333333333331, Iyy=0.20833333333333331, Izz=3.333333333333333, Iww=10, th=sqrt(3^2+1^2+2^2)])$

MM:coefmatrix([TOTx[1]=0, TOTx[2]=0, TOTx[3]=0,TOTx[4]=0,TOTx[5]=0,TOTx[6]=0],Xdd)$
CC:ratsimp(TOTx - MM.Xdd)$
float(MM^^-1 . (-CC));




/* X ONLY (rest) */

TOTx:at(TOT, [p1=3, p2=7, p3=4, v1=4, v2=0, v3=0,
               pd1=7, pd2=5, pd3=2, vd1=1, vd2=0, vd3=0,
               Ixx=0.20833333333333331, Iyy=0.20833333333333331, Izz=3.333333333333333, Iww=10, th=4])$

MM:coefmatrix([TOTx[1]=0, TOTx[2]=0, TOTx[3]=0,TOTx[4]=0,TOTx[5]=0,TOTx[6]=0],Xdd)$
CC:ratsimp(TOTx - MM.Xdd)$
float(MM^^-1 . (-CC));

